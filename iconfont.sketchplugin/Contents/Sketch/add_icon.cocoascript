@import "library.cocoascript";

var onRun = function(context) {

  var doc = context.document       // the current document (MSDocument)
  var plugin = context.plugin      // the plugin (MSPluginBundle)
  var page = [doc currentPage]     // the current page (MSPage)
  var artboard = [page currentArtboard] || page

  // create a wrapper window
  var mainwindow = Library.components.window("Add an icon with its name", "Select icon font")
  var wrapper = mainwindow[0]
  var content = mainwindow[1]
  var font_list  = ["FontAwesome", "Material", "Ion"]

  // create combobox
  var selectbox = [[NSComboBox alloc] initWithFrame:NSMakeRect(40,175,150,24)]
  [selectbox addItemsWithObjectValues:font_list]
  [selectbox selectItemAtIndex:0]
  [selectbox setEditable:false];
  [content addSubview:selectbox]

  var searchbox = [[NSTextField alloc] initWithFrame:NSMakeRect(200,175,150,24)]
  [searchbox setBackgroundColor: [NSColor clearColor]];
  [searchbox setPlaceholderString: "Write an icon name here"]
  [content addSubview:searchbox]

  // copy button for icon name
  submitButton = Library.components.submit("Submit",NSMakeRect(390, 150, 200, 50))
  submitButton.setWantsLayer(true)

  // submit button layer
  var buttonlayer = [CATextLayer layer]
  [buttonlayer setBackgroundColor:[NSColor blackColor]]
  [buttonlayer setForegroundColor:CGColorCreateGenericRGB(215/255, 159/255, 0/255, 1.0)]
  [buttonlayer setFontSize:18];

  // [buttonlayer setFont:[NSFont boldSystemFontOfSize:12]]
  buttonlayer.contentsScale = [[NSScreen mainScreen] backingScaleFactor];
  buttonlayer.string = "+ Add Icon"
  [submitButton setLayer:buttonlayer]
  [submitButton setCOSJSTargetFunction:function(sender) {
    [wrapper orderOut:nil]
    [NSApp stopModalWithCode:NSOKButton]
    [submitButton setCOSJSTargetFunction:nil]
  }];
  [content addSubview:submitButton]

  var response = [NSApp runModalForWindow:wrapper];
    
  // if is the response is ok, add icon to the layer
  if (response == NSOKButton) {
    var selected_font = [selectbox objectValueOfSelectedItem]
    var fontname = "";
    var icon_path = "";
    if (selected_font == "FontAwesome") {
      icon_path = "fontawesome.json";
      fontname = "FontAwesome";
    } else if (selected_font == "Material") {
      icon_path = "material.json";
      fontname = "Material Icons";
    } else {
      icon_path = "ion.json";
      fontname = "IonIcons";
    }

    var icon_source = [plugin urlForResourceNamed:icon_path]
    // call getIcons function from library file.
    var icons = Library.getIcons(icon_source)
    // commended icon_list because we don't need icon values.
    // var icon_list = Library.iconValues(icons,"a")
    // get input value
    var input_value = [searchbox stringValue];
    // find icon in the json file
    var finded_icon = Library.searchAlias([input_value lowercaseString],icons)

    if (finded_icon.alias != undefined) {
      // get the name of the icon from the finded_icon object
      var icon_name = finded_icon.alias + ' - ' + fontname
      // escape the unicode of the icon
      var get_selected_icon = Library.escapeUnicode('\\u' + finded_icon.unicode)
      // select the text layer
      var textLayer = page.selectedLayers().firstObject()
      // if is it a text layer run it. if it is not give an error.
      if (textLayer && textLayer.isKindOfClass(MSTextLayer)) {
        // set selected icon as the layer's value
        [textLayer setStringValue: get_selected_icon];
        // set icon name as the layer's name
        [textLayer setName: icon_name];
      } else {
        textLayer = Library.addTextLayer(doc, artboard, {"text": get_selected_icon, "name": icon_name});
      }
      // set icon font
      [textLayer setFont:[NSFont fontWithName:@""+fontname size:20.0]]
    } else {
      // give an error to write an icon
      Library.components.alert('You need to write a correct icon name','Please try again that.')
    }
  }

  Library.util.releaseButtonsInView([wrapper contentView])
};
